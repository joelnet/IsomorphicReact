@using Newtonsoft.Json
@using IsomorphicReact.Helpers
@model IsomorphicReact.Models.IndexViewModel

<h1>Isomorphic React Component</h1>

This React Timer component has been rendered on the server:

<blockquote>
    <div id="timer">@Html.Raw(ReactHelper.ExecuteComponent("Timer", Model.Props))</div>
</blockquote>

<p>We can also activate the client side rendering on the same component. <a href="#" id="start">start client side React</a></p>

<p>The same Properties on the server are also used on the client. The effect of this is "start" has already been defined,
    so the timer has been started on the server even though the client side rendering has not yet been enabled.</p>

<blockquote>
    var props = @JsonConvert.SerializeObject(Model.Props);
</blockquote>

@section scripts
{
    <script type="text/javascript">

        $('#start').click(function (event) {
            event.preventDefault();
            var props = @Html.Raw(JsonConvert.SerializeObject(Model.Props));
            React.render(
                React.createElement(Timer, props),
                document.getElementById("timer")
                );
        });

    </script>
}

